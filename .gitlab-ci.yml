stages:
  - build

variables:
  CI_IMAGE:                        "paritytech/tools:latest"
  # BUILDAH_IMAGE is defined in group variables
  BUILDAH_COMMAND:                 "buildah --storage-driver overlay2"
  DOCKERFILE:                      "Dockerfile"
  IMAGE_NAME:                      "harbor.parity-mgmt.parity.io/parity-internal/${CI_PROJECT_NAME}"
  DOCKER_TAG:                      "$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
  VAULT_SERVER_URL:                "https://vault.parity-mgmt-vault.parity.io"
  VAULT_ADDR:                      "${VAULT_SERVER_URL}"
  VAULT_AUTH_PATH:                 "gitlab-parity-io-jwt"
  VAULT_AUTH_ROLE:                 "gitlab_${CI_PROJECT_NAME}"

.common-refs:                      &common-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

.test-refs:                        &test-refs
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

# Publish docker image and deploy it on staging on tag or on push in master
.publish-deploy-refs:              &publish-deploy-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"                           # on commits to main branch
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+.*$/                   # on tags (i.e. v1.0, v2.1rc1)
    - if: $CI_COMMIT_TAG =~ /^stg-v[0-9]+\.[0-9]+.*$/               # i.e. stg-v1.0, stg-v2.1rc1

.kubernetes-env:                   &kubernetes-env
  image:                           $CI_IMAGE
  tags:
    - kubernetes-parity-build

# template task for building and pushing an image
# secrets in base64 are used because vault plugins
.build-push-docker-image:          &build-push-docker-image
  <<:                              *kubernetes-env
  image:                           $BUILDAH_IMAGE
  secrets:
    REGISTRY_AUTH_FILE:
      vault: gitlab/parity/cicd-common/HARBOR_PUSH_CREDS_DOCKERCONFIG@kv
  script:
    - $BUILDAH_COMMAND build
        --format=docker
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg VERSION="$DOCKER_TAG"
        --build-arg PROJECT_NAME="${CI_PROJECT_NAME}"
        --tag "$IMAGE_NAME:$DOCKER_TAG"
        --tag "$IMAGE_NAME:latest"
        --file "$DOCKERFILE" .
    - $BUILDAH_COMMAND info
    - $BUILDAH_COMMAND push --format=v2s2 "$IMAGE_NAME:$DOCKER_TAG"
    - $BUILDAH_COMMAND push --format=v2s2 "$IMAGE_NAME:latest"
  after_script:
    - buildah logout --all

# test that docker image can build
.build-only-docker-image:          &build-only-docker-image
  <<:                              *kubernetes-env
  image:                           $BUILDAH_IMAGE
  script:
    - $BUILDAH_COMMAND build
          --format=docker
          --build-arg VCS_REF="${CI_COMMIT_SHA}"
          --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
          --build-arg PROJECT_NAME="${CI_PROJECT_NAME}"
          --tag "$IMAGE_NAME:latest"
          --file "$DOCKERFILE" .

build-docker:
  stage:                           build
  <<:                              *test-refs
  <<:                              *kubernetes-env
  <<:                              *build-only-docker-image
  variables:
    DOCKERFILE:                    "Dockerfile"

docker-publish:
  stage: build
  image: $BUILDAH_IMAGE
  <<:                              *publish-deploy-refs
  <<:                              *kubernetes-env
  <<:                              *build-push-docker-image
  variables:
    DOCKERFILE:                    "Dockerfile"
